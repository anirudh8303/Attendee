#from firebase import Firebase
#import firebase_admin
#from firebase_admin import credentials
#from firebase_admin import db
#from firebase_admin import storage
#import json

#config = {
   # "apiKey": "AIzaSyD4jECMBq3j9bSj9eYrjiOmDMLAQ3KxFRc",
    #"authDomain": "snpc-attendence.firebaseapp.com/",
    #"databaseURL": "https://snpc-attendence.firebaseio.com/",
    #"storageBucket": "snpc-attendence.appspot.com",
    #"serviceAccount": "snpc-attendence-firebase-adminsdk-ssdhp-541121d9ef.json"
#}

#firebase = Firebase(config)
#cred = credentials.Certificate(
    #'snpc-attendence-firebase-adminsdk-ssdhp-541121d9ef.json')

#firebase_admin.initialize_app(cred, {
   # 'databaseURL': "https://snpc-attendence.firebaseio.com/",
    #'storageBucket': 'snpc-attendence.appspot.com'

#})

# storage = firebase.storage()
#bucket = storage.bucket()


#def download_blob2(source_file):
    bucket = storage.bucket()
    fname = source_file.split('.')
    blob = bucket.blob('OnSite/'+fname[0])
    blob.download_to_filename('media/attende/on_site/' + fname[0]+'.'+fname[1])
    print("Downloaded ", fname)
    return fname[0]+'.'+fname[1]


#def download_blobaudio(source_file):
 bucket = storage.bucket()
    fname = source_file.split('.')
    blob = bucket.blob('Audio/'+fname[0])
    blob.download_to_filename(
        'media/attende/onsiteaudios/' + fname[0]+'.'+fname[1])
    print("Downloaded ", fname)
    return fname[0]+'.'+fname[1]


// line 134 to 260
#def download_blob(source_file):
    bucket = storage.bucket()
    fname = source_file.split('.')
    blob = bucket.blob('Travel/'+fname[0])
    blob.download_to_filename('media/attende/travel/' + fname[0]+'.'+fname[1])
    print("Downloaded ", fname)
    return fname[0]+'.'+fname[1]


#def upload_blob(file_location):
    bucket = storage.bucket()
    blob = bucket.blob('AadharCard/'+file_location)
    blob.upload_from_filename('./media/attende/aadhar/'+file_location)
    # fbase_location = 'gs://snpc-attendence.appspot.com/AadharCard' + fname
    print("Uploaded ", file_location)


#def sync(request):
    current_time = datetime.datetime.now()
    ref = db.reference('/')
    userjson = ref.get()
    with open('data.json', 'w') as f:
        json.dump(userjson, f)
    messages.success(request, "Data synced")
    with open('data.json') as json_file:
        data = json.load(json_file)

    def getList(dict):
        return dict.keys()
    try:
        d = getList(data['Users']['profile_info'])
        c = []
        for i in d:
            c.append(i[3:])
        for emp in c:
            if Employee.objects.filter(employee_phone=data['Users']['profile_info']["+91"+emp]['phone_number']).count() == 0:
                try:
                    dates = data['Users']['profile_info']["+91"+emp]['attendance'][str(
                        current_time.year)][str(current_time.strftime("%m"))]
                    date_list = [x for x in dates]
                    emp = Employee(employee_name=data['Users']['profile_info']["+91"+emp]['name'], employee_status=data['Users']['profile_info']["+91"+emp]['status'],
                                   employee_workingDates=date_list, employee_email=data['Users']['profile_info']["+91"+emp]['email_id'], employee_phone=data['Users']['profile_info']["+91"+emp]['phone_number'])
                    emp.save()
                except:
                    emp = Employee(employee_name=data['Users']['profile_info']["+91"+emp]['name'], employee_status=data['Users']['profile_info']["+91"+emp]['status'],
                                   employee_email=data['Users']['profile_info']["+91"+emp]['email_id'], employee_phone=data['Users']['profile_info']["+91"+emp]['phone_number'])
                    emp.save()
            else:
                continue
    except:
        print("No users")
    try:
        e = getList(data['Users']['attendance']['on_site'][str(current_time.year)][str(
            current_time.strftime("%m"))][str(current_time.strftime("%d"))])
        f = []
        for i in e:
            f.append(i[3:])
        for i in f:
            try:
                if OnSite.objects.filter(employee=Employee.objects.get(employee_phone=i), emp_date=current_time).count() == 0:
                    onsite = OnSite(employee=Employee.objects.get(employee_phone=i), emp_date=current_time, emp_work_modelNumber=data['Users']['attendance']['on_site'][str(current_time.year)][str(current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['model_number'], emp_maintainParts=data['Users']['attendance']['on_site'][str(current_time.year)][str(current_time.strftime(
                        "%m"))][str(current_time.strftime("%d"))]["+91"+i]['parts'], emp_partsReason=data['Users']['attendance']['on_site'][str(current_time.year)][str(current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['reason'], emp_totalProdution=data['Users']['attendance']['on_site'][str(current_time.year)][str(current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['total_production'], emp_siteInfo=data['Users']['attendance']['on_site'][str(current_time.year)][str(current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['site_info'], emp_running=data['Users']['attendance']['on_site'][str(current_time.year)][str(current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['total_run'])
                    onsite.save()
                    try:
                        s = OnSite.objects.get(
                            employee=Employee.objects.get(employee_phone=i))
                        s.emp_latitude = data['Users']['attendance']['on_site'][str(current_time.year)][str(
                            current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['current_location']['lat']
                        s.emp_longitude = data['Users']['attendance']['on_site'][str(current_time.year)][str(
                            current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['current_location']['long0']
                        s.save()
                    except:
                        print("Current location not there")
                else:
                    continue
            except:
                print("no data on-site for this user")
    except:
        print("No attendence-on-site")
    try:
        g = getList(data['Users']['attendance']['travelling'][str(current_time.year)][str(
            current_time.strftime("%m"))][str(current_time.strftime("%d"))])
        h = []
        for i in g:
            h.append(i[3:])
        for i in h:
            try:
                if Travel.objects.filter(employee=Employee.objects.get(employee_phone=i), emp_date=current_time).count() == 0:
                    trvl = Travel(employee=Employee.objects.get(employee_phone=i), travel_force=data['Users']['attendance']['travelling'][str(current_time.year)][str(current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['totalforce'], travel_Image=download_blob(data['Users']['attendance']['travelling'][str(current_time.year)][str(current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['photo']), emp_date=current_time, travel_from=data['Users']['attendance']['travelling'][str(current_time.year)][str(current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['from'], travel_to=data['Users']['attendance']['travelling'][str(
                        current_time.year)][str(current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['to'], travel_duration=data['Users']['attendance']['travelling'][str(current_time.year)][str(current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['duration'], travel_purpose=data['Users']['attendance']['travelling'][str(current_time.year)][str(current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['purpose'], travel_by=data['Users']['attendance']['travelling'][str(current_time.year)][str(current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['transport'])
                    trvl.save()
                else:
                    continue
            except:
                print("no data for user")
        for i in h:
            try:
                trvle = Travel.objects.get(
                    employee=Employee.objects.get(employee_phone=i))
                trvle.emp_latitudec = data['Users']['attendance']['travelling'][str(current_time.year)][str(
                    current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['current_location']['lat']
                trvle.emp_longitudec = data['Users']['attendance']['travelling'][str(current_time.year)][str(
                    current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['current_location']['long0']
                trvle.save()
                trvle.emp_latitude1 = data['Users']['attendance']['travelling'][str(current_time.year)][str(
                    current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['travelling_location']['location1']['lat']
                trvle.emp_longitude1 = data['Users']['attendance']['travelling'][str(current_time.year)][str(
                    current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['travelling_location']['location1']['long0']
                trvle.save()
                trvle.emp_latitude2 = data['Users']['attendance']['travelling'][str(current_time.year)][str(
                    current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['travelling_location']['location2']['lat']
                trvle.emp_longitude2 = data['Users']['attendance']['travelling'][str(current_time.year)][str(
                    current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['travelling_location']['location2']['long0']
                trvle.save()
                trvle.emp_latitude3 = data['Users']['attendance']['travelling'][str(current_time.year)][str(
                    current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['travelling_location']['location3']['lat']
                trvle.emp_longitude3 = data['Users']['attendance']['travelling'][str(current_time.year)][str(
                    current_time.strftime("%m"))][str(current_time.strftime("%d"))]["+91"+i]['travelling_location']['location3']['long0']
                trvle.save()
            except:
                print("no travelling_ location data for user")
    except:
        print("No attendance on travel")

    return redirect('/hd')
